name: Deploy Code to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Increase timeout for this specific step
    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history

      # Step 2: Set up Node.js and npm
      - name: Setup Node.js and npm
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Adjust to your Node.js version
          npm: 'latest'

      # Step 3: Install Yarn
      - name: Install Yarn
        run: npm install -g yarn

       

      # Step 4: Deploy to EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            sudo apt-get update -y
            sudo apt-get install -y nodejs npm git
            sudo npm install -g yarn@4.0.1
            
            REPO_DIR="/home/${{ secrets.EC2_USER }}/Task-2-Pearthought-StrapiApp"
            
            # Clone or pull the repository
            if [ ! -d "$REPO_DIR" ]; then
              git clone https://github.com/priyanka-1994/Task-2-Pearthought-StrapiApp.git $REPO_DIR
            else
              cd $REPO_DIR
              git fetch --all
              git reset --hard origin/main  # Reset to main branch
              git pull origin main
            fi
      
            cd $REPO_DIR
        
            # Install dependencies and build (adjust as per your project's setup)
            yarn install
            yarn cache clean
           
            # Build the application (if a build script is defined)
            if [ -f "package.json" ] && grep -q '"build":' package.json; then
              yarn install && yarn upgrade && yarn clean cache && yarn run build
            else
              echo "No build script found in package.json"
            fi
          

      # Step 5: Display application URL
      - name: Display application URL
        run: |
          echo "Application is now running at http://${EC2_HOST}:1337"


